function C(o){return new Promise((e,l)=>{const c=document.createElement("canvas"),a=c.getContext("2d");if(!a){l(new Error("Canvas context not available"));return}c.width=o.width,c.height=o.height,a.drawImage(o,0,0);const s=a.getImageData(0,0,c.width,c.height),n=s.data;for(let t=0;t<n.length;t+=4){const h=n[t],m=n[t+1],w=n[t+2],i=Math.round(.299*h+.587*m+.114*w);n[t]=i,n[t+1]=i,n[t+2]=i}a.putImageData(s,0,0);const g=new Image;g.onload=()=>e(g),g.onerror=()=>l(new Error("Failed to load grayscale image")),g.src=c.toDataURL()})}function u(o){const e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(o);return e?[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]:[0,0,0]}function D(o,e,l){return new Promise((c,a)=>{const s=document.createElement("canvas"),n=s.getContext("2d");if(!n){a(new Error("Canvas context not available"));return}s.width=o.width,s.height=o.height,n.drawImage(o,0,0);const g=n.getImageData(0,0,s.width,s.height),t=g.data,[h,m,w]=u(e),[i,I,f]=u(l);for(let r=0;r<t.length;r+=4){const y=t[r],v=t[r+1],x=t[r+2];.299*y+.587*v+.114*x>128?(t[r]=h,t[r+1]=m,t[r+2]=w):(t[r]=i,t[r+1]=I,t[r+2]=f)}n.putImageData(g,0,0);const d=new Image;d.onload=()=>c(d),d.onerror=()=>a(new Error("Failed to load two-color image")),d.src=s.toDataURL()})}function E(o,e){return new Promise(async(l,c)=>{try{let a=o;e.grayscale&&(e.grayscaleColors?a=await D(a,e.grayscaleColors[0],e.grayscaleColors[1]):a=await C(a)),l(a)}catch(a){c(a)}})}export{C as convertImageToGrayscaleAsync,D as convertImageToTwoColor,E as preprocessImage};
